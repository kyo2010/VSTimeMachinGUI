/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package vs.time.kkv.connector;

import KKV.Utils.Tools;
import vs.time.kkv.connector.web.RaceHttpServer;
import java.awt.Point;
import java.io.File;
import java.util.ArrayList;
import java.util.List;
import java.util.TreeSet;
import javax.swing.DefaultComboBoxModel;
import vs.time.kkv.connector.TimeMachine.VSColor;
import vs.time.kkv.connector.Utils.TTS.TextToSpeachFactory;
import vs.time.kkv.models.VS_SETTING;

/**
 *
 * @author kyo
 */
public class SystemOptions extends javax.swing.JFrame {

  MainForm mainForm = null;
  
  public static String getPasswordForAdminWeb(){
    String pwd = Tools.getPreference("webAdminPassword");
    if (pwd==null || pwd.equals("")){
      return "test1";
    }
    return pwd;
  }
     
  /**
   * Creates new form WLANSetting
   */
  public SystemOptions(MainForm mainForm) {
    initComponents();
    this.mainForm = mainForm;
    setVisible(false);
  }

  static SystemOptions singelton = null;

  public static SystemOptions init(MainForm mainForm) {
    if (singelton == null) {
      singelton = new SystemOptions(mainForm);
    }

    TreeSet<String> langs = new TreeSet<String>();
    langs.add("EN");
    try {
      File lanDir = new File("locale");
      String[] files = lanDir.list();
      for (String file : files) {
        int pos = file.lastIndexOf(".ini");
        if (pos > 0) {
          langs.add(file.substring(0, pos));
        }
      }
    } catch (Exception e) {
    }
    singelton.jcLang.removeAllItems();
    for (String lang : langs) {
      singelton.jcLang.addItem(lang);
    }

    singelton.jcLang.setSelectedItem(VS_SETTING.getParam(mainForm.con, "LANG", "EN"));
    singelton.WEB_PORT.setText(VS_SETTING.getParam(mainForm.con, "WEB_PORT", "80"));
    singelton.WebServiceStartOnRun.setSelected(VS_SETTING.getParam(mainForm.con, "START_HTTPD_ON_RUN", 0) == 1 ? true : false);
    singelton.jcTTS_API.setSelectedItem(VS_SETTING.getParam(mainForm.con, "TTS_API", ""));
    singelton.checkRaceGroup.setSelected(VS_SETTING.getParam(mainForm.con, "CHECK_RACE_GROUP", 1) == 1 ? true : false);

    singelton.USE_TRANS_FOR_GATE.setSelected(VS_SETTING.getParam(mainForm.con, "USE_TRANS_FOR_GATE", 0) == 1 ? true : false);
    singelton.TRANS_FOR_GATE.setText(VS_SETTING.getParam(mainForm.con, "TRANS_FOR_GATE", "0"));
    singelton.TRANS_FOR_GATE_BLINK.setSelected(VS_SETTING.getParam(mainForm.con, "TRANS_FOR_GATE_BLINK", 0) == 1 ? true : false);
    singelton.TRANS_FOR_GATE_COLOR.setSelectedItem(VS_SETTING.getParam(mainForm.con, "TRANS_FOR_GATE_COLOR", "RED"));
        
    singelton.USE_TRAFIC_LIGHT.setSelected(VS_SETTING.getParam(mainForm.con, "USE_TRAFIC_LIGHT", 0) == 1 ? true : false);
    singelton.TRANS_TRAFIC_LIGHT.setText(VS_SETTING.getParam(mainForm.con, "TRANS_TRAFIC_LIGHT", ""));      
    
    singelton.edWaitingTime.setText(VS_SETTING.getParam(mainForm.con, "WAITING_TIME", "3"));
    singelton.USE_START_WAVE.setSelected(VS_SETTING.getParam(mainForm.con, "USE_START_WAVE", 0) == 1 ? true : false);        
    
    singelton.webAdminPassword.setText(getPasswordForAdminWeb());    

    File dir = new File("web/images");
    List<String> files = new ArrayList();
    for (String fileName : dir.list()) {
      if (fileName.indexOf(".png") > 0 || fileName.indexOf(".jpg") > 0) {
        files.add(fileName);
        //singelton.backgroundImagesForTv.addItem(fileName);
      }
    }
    singelton.backgroundImagesForTv.setModel(new DefaultComboBoxModel(files.toArray()));
    singelton.backgroundImagesForTv.setSelectedItem(VS_SETTING.getParam(mainForm.con, "TV_BACKGROUND", "chromokey.png"));

    SystemOptions th = singelton;
    Point p = mainForm.getLocationOnScreen();
    th.setLocation(p.x + mainForm.getWidth() / 2 - th.getSize().width / 2, p.y + mainForm.getHeight() / 2 - th.getSize().height / 2);
    th.setAlwaysOnTop(true);
    th.setResizable(false);
    th.buttnCaptionRefresh();
    th.fillFormParams();

    return singelton;
  }
  
  public void fillFormParams(){
     OBS_USE_WEB_SOCKET.setSelected(mainForm.obsConfig.OBS_USE_WEB_SOCKET);
     OBS_AUTO_RECORDING.setSelected(mainForm.obsConfig.OBS_AUTO_RECORDING);
     OBS_HOST.setText(mainForm.obsConfig.OBS_HOST);
     
     OBS_PORT.setText(mainForm.obsConfig.OBS_PORT);
     OBS_SCENE_RACE.setText(mainForm.obsConfig.OBS_SCENE_RACE);
     OBS_SCENE_INVATE1.setText(mainForm.obsConfig.OBS_SCENE_INVATE);
     OBS_SCENE_FINISH.setText(mainForm.obsConfig.OBS_SCENE_FINISH);
     
     OBS_GATE_TIMOUT.setText(""+mainForm.obsConfig.OBS_GATE_TIMOUT);        
     OBS_GATE_ENABLED.setSelected(mainForm.obsConfig.OBS_GATE_ENABLED);
  }

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jPanel1 = new javax.swing.JPanel();
    jButOk = new javax.swing.JButton();
    jButCancel = new javax.swing.JButton();
    jTabbedPane1 = new javax.swing.JTabbedPane();
    jPanel2 = new javax.swing.JPanel();
    jLabel3 = new javax.swing.JLabel();
    jcLang = new javax.swing.JComboBox<>();
    jLabel2 = new javax.swing.JLabel();
    jcTTS_API = new javax.swing.JComboBox<>();
    checkRaceGroup = new javax.swing.JCheckBox();
    jLabel7 = new javax.swing.JLabel();
    edWaitingTime = new javax.swing.JTextField();
    USE_START_WAVE = new javax.swing.JCheckBox();
    jPanel3 = new javax.swing.JPanel();
    jLabel1 = new javax.swing.JLabel();
    WEB_PORT = new javax.swing.JTextField();
    WebServiceStartOnRun = new javax.swing.JCheckBox();
    bHTTPServer = new javax.swing.JButton();
    jLabel6 = new javax.swing.JLabel();
    backgroundImagesForTv = new javax.swing.JComboBox<>();
    jLabel13 = new javax.swing.JLabel();
    webAdminPassword = new javax.swing.JTextField();
    jPanel4 = new javax.swing.JPanel();
    USE_TRANS_FOR_GATE = new javax.swing.JCheckBox();
    jLabel4 = new javax.swing.JLabel();
    TRANS_FOR_GATE = new javax.swing.JTextField();
    jLabel5 = new javax.swing.JLabel();
    TRANS_FOR_GATE_COLOR = new javax.swing.JComboBox<>();
    TRANS_FOR_GATE_BLINK = new javax.swing.JCheckBox();
    USE_TRAFIC_LIGHT = new javax.swing.JCheckBox();
    jLabel14 = new javax.swing.JLabel();
    TRANS_TRAFIC_LIGHT = new javax.swing.JTextField();
    jPanel5 = new javax.swing.JPanel();
    OBS_USE_WEB_SOCKET = new javax.swing.JCheckBox();
    jLabel8 = new javax.swing.JLabel();
    jLabel9 = new javax.swing.JLabel();
    OBS_HOST = new javax.swing.JTextField();
    OBS_PORT = new javax.swing.JTextField();
    OBS_AUTO_RECORDING = new javax.swing.JCheckBox();
    jLabel10 = new javax.swing.JLabel();
    OBS_SCENE_RACE = new javax.swing.JTextField();
    jLabel11 = new javax.swing.JLabel();
    OBS_SCENE_FINISH = new javax.swing.JTextField();
    jLabel12 = new javax.swing.JLabel();
    OBS_GATE_TIMOUT = new javax.swing.JTextField();
    OBS_GATE_ENABLED = new javax.swing.JCheckBox();
    jLabel15 = new javax.swing.JLabel();
    OBS_SCENE_INVATE1 = new javax.swing.JTextField();

    setTitle("System Settings");
    setIconImage(MainForm.getWindowsIcon().getImage());
    setResizable(false);

    jButOk.setText("Ok");
    jButOk.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButOkActionPerformed(evt);
      }
    });

    jButCancel.setText("Cancel");
    jButCancel.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        jButCancelActionPerformed(evt);
      }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(jButOk, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jButCancel)
        .addContainerGap())
    );
    jPanel1Layout.setVerticalGroup(
      jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel1Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jButOk)
          .addComponent(jButCancel))
        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );

    jLabel3.setText("Language");

    jcLang.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jLabel2.setText("Text to speach API");

    jcTTS_API.setModel(new javax.swing.DefaultComboBoxModel(TextToSpeachFactory.getTTSNames()));
    jcTTS_API.setName(""); // NOI18N

    checkRaceGroup.setText("Check : Race Group = Invate Group");
    checkRaceGroup.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    jLabel7.setText("Waiting time for automatic start (min) ");

    edWaitingTime.setText("3");

    USE_START_WAVE.setText("Use start.wav/finish.wav");
    USE_START_WAVE.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

    javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
    jPanel2.setLayout(jPanel2Layout);
    jPanel2Layout.setHorizontalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel2)
              .addComponent(jLabel3))
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jcTTS_API, 0, 323, Short.MAX_VALUE)
              .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jcLang, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))))
          .addGroup(jPanel2Layout.createSequentialGroup()
            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(checkRaceGroup)
              .addGroup(jPanel2Layout.createSequentialGroup()
                .addComponent(jLabel7)
                .addGap(27, 27, 27)
                .addComponent(edWaitingTime, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE))
              .addComponent(USE_START_WAVE))
            .addGap(0, 0, Short.MAX_VALUE)))
        .addContainerGap())
    );
    jPanel2Layout.setVerticalGroup(
      jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel2Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel3)
          .addComponent(jcLang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel2)
          .addComponent(jcTTS_API, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(checkRaceGroup)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel7)
          .addComponent(edWaitingTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addComponent(USE_START_WAVE)
        .addContainerGap(147, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("General", jPanel2);

    jLabel1.setText("HTTP Server Port :");

    WEB_PORT.setText("8181");

    WebServiceStartOnRun.setText("Start HTTP Server automatically");
    WebServiceStartOnRun.setToolTipText("");
    WebServiceStartOnRun.setHorizontalTextPosition(javax.swing.SwingConstants.LEADING);
    WebServiceStartOnRun.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        WebServiceStartOnRunActionPerformed(evt);
      }
    });

    bHTTPServer.setText("Start HTTP Server");
    bHTTPServer.addActionListener(new java.awt.event.ActionListener() {
      public void actionPerformed(java.awt.event.ActionEvent evt) {
        bHTTPServerActionPerformed(evt);
      }
    });

    jLabel6.setText("Background for TV monitor :");

    backgroundImagesForTv.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

    jLabel13.setText("Web Admin Password : ");

    webAdminPassword.setText("test1");

    javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
    jPanel3.setLayout(jPanel3Layout);
    jPanel3Layout.setHorizontalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(WebServiceStartOnRun)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(bHTTPServer, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE))
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addComponent(jLabel1)
            .addGap(18, 18, 18)
            .addComponent(WEB_PORT, javax.swing.GroupLayout.PREFERRED_SIZE, 78, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(0, 0, Short.MAX_VALUE))
          .addGroup(jPanel3Layout.createSequentialGroup()
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(jLabel6)
              .addComponent(jLabel13))
            .addGap(18, 18, 18)
            .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(backgroundImagesForTv, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
              .addComponent(webAdminPassword))))
        .addContainerGap())
    );
    jPanel3Layout.setVerticalGroup(
      jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel3Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel1)
          .addComponent(WEB_PORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(WebServiceStartOnRun)
          .addComponent(bHTTPServer))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel6)
          .addComponent(backgroundImagesForTv, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel13)
          .addComponent(webAdminPassword, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap(156, Short.MAX_VALUE))
    );

    jTabbedPane1.addTab("HTTP", jPanel3);

    USE_TRANS_FOR_GATE.setText("Use transponder for gate");
    USE_TRANS_FOR_GATE.setToolTipText("You can control colors of gate");

    jLabel4.setText("Transponder of Gate");

    TRANS_FOR_GATE.setText("0");

    jLabel5.setText("Color of Gate");

    TRANS_FOR_GATE_COLOR.setModel(new javax.swing.DefaultComboBoxModel(VSColor.getColors()));

    TRANS_FOR_GATE_BLINK.setText("Blink");

    USE_TRAFIC_LIGHT.setText("Use traffic light");
    USE_TRAFIC_LIGHT.setToolTipText("");
    USE_TRAFIC_LIGHT.setFocusable(false);

    jLabel14.setText("Transponder ID for traffic light");

    TRANS_TRAFIC_LIGHT.setText("0");
    TRANS_TRAFIC_LIGHT.setToolTipText("Please use 0 - for Start Gate");

    javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
    jPanel4.setLayout(jPanel4Layout);
    jPanel4Layout.setHorizontalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(USE_TRANS_FOR_GATE)
              .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                  .addComponent(jLabel4)
                  .addComponent(jLabel5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                  .addComponent(TRANS_FOR_GATE_COLOR, 0, 160, Short.MAX_VALUE)
                  .addComponent(TRANS_FOR_GATE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TRANS_FOR_GATE_BLINK))
              .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(TRANS_TRAFIC_LIGHT)))
            .addContainerGap(80, Short.MAX_VALUE))
          .addGroup(jPanel4Layout.createSequentialGroup()
            .addComponent(USE_TRAFIC_LIGHT)
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
    );
    jPanel4Layout.setVerticalGroup(
      jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel4Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(USE_TRANS_FOR_GATE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(TRANS_FOR_GATE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel4))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(TRANS_FOR_GATE_BLINK)
          .addComponent(jLabel5)
          .addComponent(TRANS_FOR_GATE_COLOR, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(15, 15, 15)
        .addComponent(USE_TRAFIC_LIGHT)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(TRANS_TRAFIC_LIGHT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel14))
        .addContainerGap(125, Short.MAX_VALUE))
    );

    jLabel14.getAccessibleContext().setAccessibleName("Transonder ID for Traffic light");

    jTabbedPane1.addTab("VS Transpnder", jPanel4);

    OBS_USE_WEB_SOCKET.setText("Use OBS Web Socket");
    OBS_USE_WEB_SOCKET.setToolTipText("");
    OBS_USE_WEB_SOCKET.setActionCommand("");

    jLabel8.setText("OBS Web Socket");
    jLabel8.setToolTipText("Instal OBS Web Socket plugin");

    jLabel9.setText("port");

    OBS_HOST.setText("jTextField1");

    OBS_PORT.setText("jTextField2");

    OBS_AUTO_RECORDING.setText("Automatic Start/Stop Recording for a race");
    OBS_AUTO_RECORDING.setToolTipText("");
    OBS_AUTO_RECORDING.setActionCommand("");

    jLabel10.setText("OBS Scene for Start");

    OBS_SCENE_RACE.setText("OBS_SCENE_RACE");

    jLabel11.setText("OBS Scene for Invitation");

    OBS_SCENE_FINISH.setText("OBS_SCENE_RACE");

    jLabel12.setText("OBS Scene for Finish");

    OBS_GATE_TIMOUT.setText("OBS_SCENE_INVTATION");

    OBS_GATE_ENABLED.setText("Switch to Gate, Scene name is \"gate_<gate N>\"");
    OBS_GATE_ENABLED.setToolTipText("");
    OBS_GATE_ENABLED.setActionCommand("");

    jLabel15.setText("Minimum switching timeout");

    OBS_SCENE_INVATE1.setText("OBS_SCENE_INVTATION");

    javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
    jPanel5.setLayout(jPanel5Layout);
    jPanel5Layout.setHorizontalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addGroup(jPanel5Layout.createSequentialGroup()
            .addComponent(jLabel8)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(OBS_HOST, javax.swing.GroupLayout.DEFAULT_SIZE, 151, Short.MAX_VALUE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(jLabel9)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(OBS_PORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(54, 54, 54))
          .addGroup(jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(OBS_USE_WEB_SOCKET)
              .addComponent(OBS_AUTO_RECORDING))
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
          .addGroup(jPanel5Layout.createSequentialGroup()
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
              .addComponent(OBS_GATE_ENABLED)
              .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                .addGroup(jPanel5Layout.createSequentialGroup()
                  .addComponent(jLabel15)
                  .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                  .addComponent(OBS_GATE_TIMOUT, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel5Layout.createSequentialGroup()
                  .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10)
                    .addComponent(jLabel12)
                    .addComponent(jLabel11))
                  .addGap(32, 32, 32)
                  .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(OBS_SCENE_RACE, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OBS_SCENE_FINISH, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(OBS_SCENE_INVATE1, javax.swing.GroupLayout.PREFERRED_SIZE, 146, javax.swing.GroupLayout.PREFERRED_SIZE)))))
            .addGap(0, 0, Short.MAX_VALUE))))
    );
    jPanel5Layout.setVerticalGroup(
      jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(jPanel5Layout.createSequentialGroup()
        .addContainerGap()
        .addComponent(OBS_USE_WEB_SOCKET)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel8)
          .addComponent(jLabel9)
          .addComponent(OBS_HOST, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(OBS_PORT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addGap(18, 18, 18)
        .addComponent(OBS_AUTO_RECORDING)
        .addGap(21, 21, 21)
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
          .addComponent(OBS_SCENE_RACE, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel10))
        .addGap(6, 6, 6)
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(OBS_SCENE_FINISH, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
          .addComponent(jLabel12))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel11)
          .addComponent(OBS_SCENE_INVATE1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
        .addComponent(OBS_GATE_ENABLED)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
          .addComponent(jLabel15)
          .addComponent(OBS_GATE_TIMOUT, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        .addContainerGap())
    );

    jTabbedPane1.addTab("OBS", jPanel5);

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
      .addComponent(jTabbedPane1)
    );
    layout.setVerticalGroup(
      layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGroup(layout.createSequentialGroup()
        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 351, javax.swing.GroupLayout.PREFERRED_SIZE)
        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
    );

    pack();
  }// </editor-fold>//GEN-END:initComponents

  private void jButCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButCancelActionPerformed
    setVisible(false);
  }//GEN-LAST:event_jButCancelActionPerformed

  private void jButOkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButOkActionPerformed
    int WEB_PORT_INT = 80;
    try {
      WEB_PORT_INT = Integer.parseInt(WEB_PORT.getText());
    } catch (Exception e) {
    }

    VS_SETTING.setParam(mainForm.con, "WEB_PORT", "" + WEB_PORT_INT);
    VS_SETTING.setParam(mainForm.con, "START_HTTPD_ON_RUN", "" + (WebServiceStartOnRun.isSelected() ? 1 : 0));
    VS_SETTING.setParam(mainForm.con, "TTS_API", "" + jcTTS_API.getSelectedItem());
    VS_SETTING.setParam(mainForm.con, "CHECK_RACE_GROUP", "" + (checkRaceGroup.isSelected() ? 1 : 0));
    VS_SETTING.setParam(mainForm.con, "LANG", "" + jcLang.getSelectedItem());

    int MINUTES = 3;
    try {
      MINUTES = Integer.parseInt(edWaitingTime.getText());
    } catch (Exception e) {
    }
    VS_SETTING.setParam(mainForm.con, "WAITING_TIME", "" + MINUTES);

    VS_SETTING.setParam(mainForm.con, "TRANS_FOR_GATE", "" + TRANS_FOR_GATE.getText());
    VS_SETTING.setParam(mainForm.con, "USE_TRANS_FOR_GATE", "" + (USE_TRANS_FOR_GATE.isSelected() ? 1 : 0));
    VS_SETTING.setParam(mainForm.con, "TRANS_FOR_GATE_COLOR", "" + TRANS_FOR_GATE_COLOR.getSelectedItem());
    VS_SETTING.setParam(mainForm.con, "TRANS_FOR_GATE_BLINK", "" + (TRANS_FOR_GATE_BLINK.isSelected() ? 1 : 0));

    VS_SETTING.setParam(mainForm.con, "USE_TRAFIC_LIGHT", "" + (USE_TRAFIC_LIGHT.isSelected() ? 1 : 0));    
    VS_SETTING.setParam(mainForm.con, "TRANS_TRAFIC_LIGHT", "" + TRANS_TRAFIC_LIGHT.getText());    
    
    VS_SETTING.setParam(mainForm.con, "USE_START_WAVE", "" + (USE_START_WAVE.isSelected() ? 1 : 0));        
    
    VS_SETTING.setParam(mainForm.con, "TV_BACKGROUND", "" + backgroundImagesForTv.getSelectedItem());
    Tools.setPreference("webAdminPassword", webAdminPassword.getText());

    mainForm.obsConfig.OBS_USE_WEB_SOCKET = OBS_USE_WEB_SOCKET.isSelected();
    mainForm.obsConfig.OBS_AUTO_RECORDING = OBS_AUTO_RECORDING.isSelected();
    mainForm.obsConfig.OBS_HOST = OBS_HOST.getText();
    mainForm.obsConfig.OBS_PORT = OBS_PORT.getText();
    mainForm.obsConfig.OBS_SCENE_RACE = OBS_SCENE_RACE.getText();
    mainForm.obsConfig.OBS_SCENE_FINISH = OBS_SCENE_FINISH.getText();
    mainForm.obsConfig.OBS_SCENE_INVATE = OBS_SCENE_INVATE1.getText();
    
    mainForm.obsConfig.OBS_GATE_ENABLED = OBS_GATE_ENABLED.isSelected();
    try{
      mainForm.obsConfig.OBS_GATE_TIMOUT = Integer.parseInt(OBS_GATE_TIMOUT.getText());
    }catch(Exception e){}

    mainForm.applayLanguage();
    mainForm.speaker.reset();
    mainForm.obsConfig.save();

    setVisible(false);
  }//GEN-LAST:event_jButOkActionPerformed

  private void WebServiceStartOnRunActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_WebServiceStartOnRunActionPerformed
    // TODO add your handling code here:
  }//GEN-LAST:event_WebServiceStartOnRunActionPerformed

  public void buttnCaptionRefresh() {
    if (mainForm.httpServer == null || !mainForm.httpServer.connected) {
      bHTTPServer.setText("Start HTTP Server");
    } else {
      bHTTPServer.setText("Stop HTTP Server");
    }
  }

  public static void runWebServer(MainForm mainForm, boolean runOrStop) {
    if (runOrStop) {
      mainForm.httpServer = new RaceHttpServer(mainForm, VS_SETTING.getParam(mainForm.con, "WEB_PORT", 80));
    } else {
      mainForm.httpServer.disconnect();
      mainForm.httpServer = null;
    }
  }

  private void bHTTPServerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bHTTPServerActionPerformed
    // TODO add your handling code here:
    if (mainForm.httpServer == null || !mainForm.httpServer.connected) {
      runWebServer(mainForm, true);
    } else {
      runWebServer(mainForm, false);
    }
    buttnCaptionRefresh();
  }//GEN-LAST:event_bHTTPServerActionPerformed

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JCheckBox OBS_AUTO_RECORDING;
  private javax.swing.JCheckBox OBS_GATE_ENABLED;
  private javax.swing.JTextField OBS_GATE_TIMOUT;
  private javax.swing.JTextField OBS_HOST;
  private javax.swing.JTextField OBS_PORT;
  private javax.swing.JTextField OBS_SCENE_FINISH;
  private javax.swing.JTextField OBS_SCENE_INVATE1;
  private javax.swing.JTextField OBS_SCENE_RACE;
  private javax.swing.JCheckBox OBS_USE_WEB_SOCKET;
  private javax.swing.JTextField TRANS_FOR_GATE;
  private javax.swing.JCheckBox TRANS_FOR_GATE_BLINK;
  private javax.swing.JComboBox<String> TRANS_FOR_GATE_COLOR;
  private javax.swing.JTextField TRANS_TRAFIC_LIGHT;
  private javax.swing.JCheckBox USE_START_WAVE;
  private javax.swing.JCheckBox USE_TRAFIC_LIGHT;
  private javax.swing.JCheckBox USE_TRANS_FOR_GATE;
  private javax.swing.JTextField WEB_PORT;
  private javax.swing.JCheckBox WebServiceStartOnRun;
  private javax.swing.JButton bHTTPServer;
  private javax.swing.JComboBox<String> backgroundImagesForTv;
  private javax.swing.JCheckBox checkRaceGroup;
  private javax.swing.JTextField edWaitingTime;
  private javax.swing.JButton jButCancel;
  private javax.swing.JButton jButOk;
  private javax.swing.JLabel jLabel1;
  private javax.swing.JLabel jLabel10;
  private javax.swing.JLabel jLabel11;
  private javax.swing.JLabel jLabel12;
  private javax.swing.JLabel jLabel13;
  private javax.swing.JLabel jLabel14;
  private javax.swing.JLabel jLabel15;
  private javax.swing.JLabel jLabel2;
  private javax.swing.JLabel jLabel3;
  private javax.swing.JLabel jLabel4;
  private javax.swing.JLabel jLabel5;
  private javax.swing.JLabel jLabel6;
  private javax.swing.JLabel jLabel7;
  private javax.swing.JLabel jLabel8;
  private javax.swing.JLabel jLabel9;
  private javax.swing.JPanel jPanel1;
  private javax.swing.JPanel jPanel2;
  private javax.swing.JPanel jPanel3;
  private javax.swing.JPanel jPanel4;
  private javax.swing.JPanel jPanel5;
  private javax.swing.JTabbedPane jTabbedPane1;
  private javax.swing.JComboBox<String> jcLang;
  private javax.swing.JComboBox<String> jcTTS_API;
  private javax.swing.JTextField webAdminPassword;
  // End of variables declaration//GEN-END:variables
}
